<Window x:Class="FlowEvents.UnitsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FlowEvents"
        mc:Ignorable="d"
        WindowStartupLocation="CenterOwner"
        Title="Перечень установок" Height="450" Width="750" ResizeMode="NoResize">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <!--
        Добавляем конвертер в ресурсы окна 
        BooleanToVisibilityConverter — встроенный конвертер в WPF
        x:Key="BoolToVisibilityConverter" — задает ключ, по которому можно ссылаться на этот конвертер.
        Конвертер преобразует:
            true → Visibility.Visible
            false → Visibility.Collapsed
        -->

        <!-- Стиль для круглой кнопки -->
        <Style x:Key="RoundDeleteButtonStyle" TargetType="Button">
            <!-- Убираем стандартный фон и границу -->
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- Круглый контейнер -->
                        <Grid>
                            <!-- Круг с красным фоном -->
                            <Ellipse x:Name="Circle" 
                                 Fill="Red" 
                                 Stroke="DarkRed" 
                                 StrokeThickness="1"/>
                            <!-- Значок минуса -->
                            <TextBlock Text="-" 
                                   FontSize="20" 
                                   FontWeight="Bold" 
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"/>
                        </Grid>
                        <!-- Эффекты при наведении и нажатии -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Circle" Property="Fill" Value="#FFCC0000"/>
                                <!-- Более светлый красный -->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Circle" Property="Fill" Value="#FF990000"/>
                                <!-- Темный красный -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Размеры кнопки -->
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="450"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <DataGrid ItemsSource="{Binding Units}" 
                  SelectedItem="{Binding SelectedUnit, Mode=TwoWay}" 
                  AutoGenerateColumns="False" 
                  CanUserAddRows="False" 
                  IsReadOnly="True"
                  SelectionMode="Single"
                  Margin="5" Grid.Column="0">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="40"/>
                <DataGridTextColumn Header="Объект" Binding="{Binding UnitName}" Width="100" />
                <DataGridTextColumn Header="Описание" Binding="{Binding Description}" Width="*" />
                <!--
                <DataGridTemplateColumn Header="Actions">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">-->
                <!-- <Button Content="Edit" Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" Margin=" 5 0 5 0"/> -->
                <!--             <Button Content="Delete" 
                                    Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                    Margin="0 0 5 0"/>
                        </StackPanel>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                -->
            </DataGrid.Columns>
        </DataGrid>

        <Border Grid.Row="0" Grid.RowSpan="3" Background="#CCFFFFFF" 
                Visibility="{Binding VisibleBar, Converter={StaticResource BooleanToVisibilityConverter}}"
                Panel.ZIndex="1">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <ProgressBar IsIndeterminate="True" Width="200" Height="20"/>
                <TextBlock Text="Обновление данных..." Margin="0 10 0 0" HorizontalAlignment="Center"/>
            </StackPanel>
        </Border>

        <Grid Grid.Column="1" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0"
                        Visibility="{Binding IsEditPanelVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                <!-- Поля для ввода данных -->
                <TextBlock Text="Название объекта:"/>
                <TextBox x:Name="UnitTextBox" 
                         Text="{Binding Unit, UpdateSourceTrigger=PropertyChanged}"
                         Margin="10" Width="200" />
                <TextBlock Text="Описание объекта:"/>
                <TextBox x:Name="DescriptionTextBox" 
                         Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                         Margin="10" Width="200" />

                <TextBlock x:Name="ErrorTextBlock" Foreground="Red" 
                           Text="{Binding ErrorText}"
                           Visibility="{Binding IsErrorTextVisible, Converter={StaticResource BoolToVisibilityConverter}}" />

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <!-- Кнопка "Создать" -->
                    <Button Content="Создать" 
                            Command="{Binding SaveCommand}" 
                            Width="80" 
                            Margin="0 0 10 0" 
                            IsDefault="True" 
                            Visibility="{Binding IsCreateButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>

                    <!-- Кнопка "Обновить" -->
                    <Button Content="Обновить" 
                            Command="{Binding UpdateCommand}" 
                            Width="80" 
                            Margin="0 0 10 0"
                            Visibility="{Binding IsUpdateButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}" />

                    <!-- Кнопка "Отмена" -->
                    <Button Content="Отмена" 
                            Command="{Binding CancelCommand }" 
                            Width="80" 
                            IsCancel="True" />
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Row="1"
                        Orientation="Horizontal" 
                        HorizontalAlignment="Right">

                <Button Content="Добавить" 
                        Command="{Binding AddCommand}" 
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Bottom" 
                        Height="30" Width="80" Margin="10" 
                        Visibility="{Binding IsAddButtonVisible ,Converter={StaticResource BoolToVisibilityConverter}}"/>

                <Button Content="Удалить"  
                        Command="{Binding DeleteCommand}" 
                        Height="30" Width="80" Margin="10"
                        Visibility="{Binding IsDeleteButtonVisible, Converter={StaticResource BoolToVisibilityConverter} }"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
